name: CI

on: [push]

jobs:

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - '3.7'

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libsasl2-dev libldap2-dev ldap-utils

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    
    - name: Install application dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: create .env
      run: |
        echo -e "IRODS_JSON=${IRODS_JSON}\nIRODS_CERT=${IRODS_CERT}\n" > .env;
        echo -e "IRODS_HOST=${IRODS_HOST}\nIRODS_PORT=${IRODS_PORT}\nIRODS_USER=${IRODS_USER}\nIRODS_PASS=${IRODS_PASS}\nIRODS_ZONE=${IRODS_ZONE}\n" >> .env;
        echo -e "SSH_HOST=${SSH_HOST}\nSSH_PORT=${SSH_PORT}\nSSH_USER=${IRODS_USER}\n" >> .env;
        echo -e "LDAP_HOST=${LDAP_HOST}\nLDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD}\nLDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}\nLDAP_BASE_DN=${LDAP_BASE_DN}\nLDAP_BIND_DN=${LDAP_BIND_DN}\n" >> .env;
      env:
        IRODS_JSON: etc/irods_environment/irods_environment.json
        IRODS_CERT: etc/irods_environment/irods.crt
        IRODS_HOST: localhost
        IRODS_PORT: 1247
        IRODS_USER: rods
        IRODS_PASS: password
        IRODS_ZONE: tempZone
        SSH_HOST: localhost
        SSH_PORT: 2222
        LDAP_HOST: ldap://localhost:1389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_CONFIG_PASSWORD: config
        LDAP_BASE_DN: dc=example,dc=org
        LDAP_BIND_DN: cn=admin,dc=example,dc=org

    - name: create SSH keys
      run: |
        mkdir -p ~/.ssh;
        ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N '';

    - name: Start LDAP & iRODS...
      run: |
        (cd etc && docker-compose up -d)

    - name: Wait for iRODS....
      run: |
        sleep 60

    # Setup tmate session
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - name: Run pytest...
      run: |
        pytest;
      env:
        LOG_LEVEL: INFO

    - name: Upload coverage data to coveralls.io
      run: coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github
        COVERALLS_PARALLEL: true


  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github

