name: CI

on: [push]

jobs:

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - '3.6'

    services:
      ldap:
        image: osixia/openldap:latest
        ports:
          - 389:389
        env:
          LDAP_DOMAIN: example.org
          LDAP_ADMIN_USERNAME: admin
          LDAP_ADMIN_PASSWORD: secret
          LDAP_CONFIG_PASSWORD: config
          LDAP_BASE_DN: dc=example,dc=org
          LDAP_TLS: true

#     irods:
#       image: irods/icat:4.0.3
#       ports:
#         - 1247:1247
#       options: --name my-irods

#     ssh:
#       image: linuxserver/openssh-server
#       ports:
#         - 2222:22

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libsasl2-dev libldap2-dev ldap-utils

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    
    - name: Install application dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: create .env
      run: |
        echo -e "IRODS_HOST=${IRODS_HOST}\nIRODS_PORT=${IRODS_PORT}\nIRODS_USER=${IRODS_USER}\nIRODS_ZONE=${IRODS_ZONE}\n" > .env
        echo -e "SSH_HOST=${SSH_HOST}\nSSH_PORT=${SSH_PORT}\nSSH_USER=${IRODS_USER}\n" >> .env
        echo -e "LDAP_URL=${LDAP_URL}\nLDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}\nLDAP_BASE_DN=${LDAP_BASE_DN}\nLDAP_BIND_DN=${LDAP_BIND_DN}\n" >> .env
      env:
        IRODS_HOST: localhost
        IRDDS_PORT: 1247
        IRODS_USER: rods
        IRODS_PASS: password
        IRODS_ZONE: tempZone
        SSH_HOST: localhost
        SSH_PORT: 2222
        LDAP_URL: ldap://localhost:389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_CONFIG_PASSWORD: config
        LDAP_BASE_DN: dc=example,dc=org
        LDAP_BIND_DN: cn=admin,dc=example,dc=org

    - name: Start iRODS...
        bin/irods_start.sh

    - name: ldap - Initialization...
      run: |
        sleep 5;
        ldapwhoami -H ${LDAP_URL} -D ${LDAP_BIND_DN} -w ${LDAP_ADMIN_PASSWORD};  
        for f in access eduPerson voPerson groupOfMembers; do ldapadd -H ${LDAP_URL} -D cn=admin,cn=config -w ${LDAP_CONFIG_PASSWORD} -f etc/ldif/$f.ldif; done;
        for f in service; do ldapadd -H ${LDAP_URL} -D ${LDAP_BIND_DN} -w ${LDAP_ADMIN_PASSWORD} -f etc/ldif/$f.ldif; done;
      env:
        LDAP_URL: ldap://localhost:389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_CONFIG_PASSWORD: config
        LDAP_BASE_DN: dc=example,dc=org
        LDAP_BIND_DN: cn=admin,dc=example,dc=org

    # Setup tmate session
    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3

    - name: Run pytest...
      run: |
        export IRODS_PASS=$(docker exec my-irods sed -n 11p /opt/irods/setup_responses)
        export PYTHONPATH="."
        pytest
      env:
        LDAP_HOST: ldap://localhost:389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_BASE_DN: dc=example,dc=org
        LDAP_BIND_DN: cn=admin,dc=example,dc=org
        IRDDS_PORT: 1247
        IRODS_USER: rods
        IRODS_ZONE: tempZone
        SSH_HOST: localhost
        SSH_PORT: 2222
        DRY_RUN: False
        LOG_LEVEL: INFO    


